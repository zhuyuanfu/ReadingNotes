第一章《我的第一次BillG审查》记录了作者第一次被比尔盖茨审查的过程。作者通过好奇地检查日期函数发现了不对劲的地方，追根究底发现了是为了节约内存而导致了那个bug。第二天比尔盖茨来当面审查的时候，作者回答出了正确的答案，于是比尔盖茨罕见地没有发火，很满意地离开了。

第二章《寻找优秀的程序员》认为，不够优秀的程序员才会去投放简历，足够优秀的程序员是早有足够好的去处的。为了招收到好程序员，管理者需要（1）参加新技术的会议，结识热爱新技术的人，他们可能是潜在的优秀程序员；（2）去学校招募实习生；（3）成立自己的技术社区。需要注意的是，优秀的员工推荐的人可能不是聪明的程序员。

第三章《寻找优秀的程序员之实战指南》讲解了如何才能招收优秀的程序员。作者认同《人件》中“给员工提供私人空间和窗口景色”的观点。作者认为需要给程序员提供良好的工作环境，包括椅子和巨大的显示器。作者认为程序员需要被尊重，需要有开心活跃的同事。对待程序员最好提出建议而不是发布命令。程序员的世界容不下办公室的勾心斗角，正确比明争暗斗重要得多。最好让程序员知道自己想干的活，选择自己喜欢的语言。程序员决定去哪里工作时，薪水的位置非常低。

第四章《三种管理方法》给出了管理团队的三种方法：军事化管理法，经济利益驱动法和认同法。

第五章《军事化管理法》指出，军事化管理法有三个缺点。第一，程序员不喜欢军事化管理法。第二，军事化管理法没有足够的时间用在微观管理上。第三，相比于管理者，程序员通常拥有更多的信息，所以决策不适合交给管理者来做。

第六章《经济利益驱动法》认为，这种方法适合管理普通员工，不适合管理程序员，因为这种管理方法将程序员的内部激励转化为持续时间和效果都弱得多的外部激励。另外，使用经济利益驱动法是鼓励程序员与制度博弈。这种管理法的最大问题是，它根本不是一种管理，更像是巧妙的推卸责任。

第七章《认同法》认为认同法才是真正有效的管理程序员的办法。认同法的第一部分是使人认为公司的目标在某种程度上是高尚的，第二部分是向人们提供必要的信息，使公司向正确方向前进。

第八章《学校只教Java的危险性》认为Java区分度不够，或者说Java的难度不足以筛选掉不够聪明的计算机学生。作者狂喷平庸的学生只能学会Java，理解不了指针和递归，我感觉膝盖中了一箭。

第九章《在耶鲁大学的演讲》作者继续黑Java。在质量派与务实派的争斗中，作者支持务实派。在Windows与Unix的争斗中，作者支持Unix的风格――命令行为本，UI为末，嘲讽Windows风格――所有操作与UI绑定。作者认为，内部程序员的工作很糟糕，因为内部工作违反了程序员精益求精的习惯，与之相对的专业的软件公司的情况就好得多。撰写技术内容的文章也是很重要的技能。在本章结尾，作者欢迎想要学习如何开发软件的学生申请他的公司的实习机会。

第十章《给计算机系学生的建议》列出了作者针对计算机专业的7条建议：1，毕业前练好写作；2，毕业前学好C语言；3，毕业前学好微观经济学；4，不要因为枯燥就不选修非计算机专业的课程；5，选修有大量编程实践的课程；6，别担心所有工作都被印度人抢走；7，找一份好的暑期实习工作。

第三部分开始讲设计的作用。

第十一章《字体平滑、反锯齿和次像素渲染》指出用户更加喜欢自己已经习惯了的设计风格。

第十二章《寸土必争》强调了注意细节的意义。当你打磨了一个又一个细节后，拿出来的就是一件真正优秀的产品。

第十三章《大构想的陷阱》是对《梦断代码》一书的评论。作者认为，做决策的人宜少不宜多，并且最好把无关因素排除到会议之外。作者通过分析需求、逐个批判功能的方式说明Chandler为什么会失败 。

第十四章《别给用户太多选择》讲的是过多选项会给用户带来手足无措。作者举的例子是windows vista的关机菜单，它一共有9条选项。随后，作者演示了如何把繁多的选项逐渐削减至两个选项，使读者直接体验选项骤减的清爽感。最后，作者指出太多的选择不会让用户幸福。

第十五章《易用性是不够的》中，作者认为虽然易用性很重要，但设计社会化界面更重要。当你在编写充当人与人之间中介的软件时，做好易用性设计之后，下一步就必须做好社会化设计，而且，社会化设计比易用性设计更重要。如果社会化界面一塌糊涂，那么就算你有世界上最好的用户界面，你的软件也活不了。作者举了一个在自己的论坛中隔离垃圾广告的例子，说明了相对于防御式编程，应用社会化的方式更好地防止垃圾广告影响论坛社区。

第十六章《用软件搭建社区》中，作者提出，许多程序员非常渴望多一些人际交往。随后接受了对自己和Joel论坛的一个采访，并发表了自己的看法。

第十七章《火星人的项目》








第五部分 编程建议

第二十章《循证式日程规划》展示了作者开发一个日程规划软件的例子。在这一过程中，首先需要想清楚自己想要干什么，想清楚详细的工作步骤，将它需要的时间控制在16小时内。其次，需要追踪时间的用途，保留好工作时间记录单。接着，需要对未来情况进行模拟。最后，关于被中途打断，可以将实际情况记录下来，忠于实际的记录能比较准确地预测程序猿的效率。







































